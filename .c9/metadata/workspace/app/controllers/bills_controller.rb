{"changed":true,"filter":false,"title":"bills_controller.rb","tooltip":"/app/controllers/bills_controller.rb","value":"class BillsController < ApplicationController\n  before_action :set_bill, only: [:show, :edit, :update, :destroy]\n\n  # GET /bills\n  # GET /bills.json\n  def index\n    @bills = Bill.all\n  end\n  \n  #return all bills belonging to given user\n  def userBills\n    @name = params(giveMeTheName)\n    @bills =  User.joins(:bills).where(bills: { username: @name })\n    respond_to do |format|\n     format.html { render :userBills}\n     format.json { render json: @bills }\n    end\n  end\n\n  # GET /bills/1\n  # GET /bills/1.json\n  def show\n    @bills = Bill.find(params[:id])\n    respond_to do |format|\n     format.html { render :show }\n\n     format.json { render json: @bills }\n    end\n  end\n\n  # GET /bills/new\n  def new\n    @bill = Bill.new\n  end\n\n  # GET /bills/1/edit\n  def edit\n  end\n\n  # POST /bills\n  # POST /bills.json\n  def create\n    @bill = Bill.new(bill_params)\n\n    respond_to do |format|\n      if @bill.save\n        format.html { redirect_to @bill, notice: 'Bill was successfully created.' }\n        format.json { render :show, status: :created, location: @bill }\n      else\n        format.html { render :new }\n        format.json { render json: @bill.errors, status: :unprocessable_entity }\n      end\n    end\n  end\n\n  # PATCH/PUT /bills/1\n  # PATCH/PUT /bills/1.json\n  def update\n    respond_to do |format|\n      if @bill.update(bill_params)\n        format.html { redirect_to @bill, notice: 'Bill was successfully updated.' }\n        format.json { render :show, status: :ok, location: @bill }\n      else\n        format.html { render :edit }\n        format.json { render json: @bill.errors, status: :unprocessable_entity }\n      end\n    end\n  end\n\n  # DELETE /bills/1\n  # DELETE /bills/1.json\n  def destroy\n    @bill.destroy\n    respond_to do |format|\n      format.html { redirect_to bills_url, notice: 'Bill was successfully destroyed.' }\n      format.json { head :no_content }\n    end\n  end\n\n  private\n    # Use callbacks to share common setup or constraints between actions.\n    def set_bill\n      @bill = Bill.find(params[:id])\n    end\n\n    # Never trust parameters from the scary internet, only allow the white list through.\n    def bill_params\n      params.require(:bill).permit(:name, :category, :paymentType, :loginPage, :dueDate, :repeat, :amountLo, :amountHi, :snoozeDuration)\n    end\nend\n","undoManager":{"mark":-1,"position":1,"stack":[[{"group":"doc","deltas":[{"start":{"row":26,"column":0},"end":{"row":28,"column":48},"action":"remove","lines":["=======","     #format.html { render  : @bills }",">>>>>>> 272f0134d5cb9123e1f96a26126d0a240b8e05b2"]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":0},"end":{"row":25,"column":0},"action":"remove","lines":["<<<<<<< HEAD",""]}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":24,"column":0},"end":{"row":24,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1428466208083}